syntax = "proto3";

package worker;

message Empty {}

// A base 64-encoded image. Can be the input to inference, or inference output
message Image {
    bytes image = 1;
    optional uint32 height = 2;
    optional uint32 width = 3;
}

// A particular classification returned by a classifier model
message Class {
    optional double probability = 1;
    optional string label = 2;
}

// An array of classes
message Classes {
    repeated Class classes = 1;
}

// The various types of inference possible
message InferenceType {
    enum Type {
        ImageClassification = 0;
        Image = 1;
        SentimentAnalysis = 2;
    }

    Type type = 1;
    optional uint32 top_n = 2; // only for ImageClassification
}

// A request for inference
message InferenceTask {
    InferenceType inference_type = 1;
    optional Image image = 2; // For image-to-X tasks
    optional string text = 3; // For text-to-X tasks
}

message B64Image {
    string image = 1;
}

// An inference response -- the output of a model
message Inference {
    optional B64Image image = 1; // for X-to-image tasks
    optional string text = 2; // for X-to-text tasks
    optional Classes classification = 3; // for classification tasks
}

// An inference worker
service Worker {
    rpc ComputeInference(InferenceTask) returns (Inference) {}
}
